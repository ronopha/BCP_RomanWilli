{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_PIN",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "_PUK",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2a",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2b",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2c",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPIN",
						"type": "address"
					}
				],
				"name": "PINChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "orderID",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_statusFlag",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "dataDelivered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "CustomerAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "MonetaryAmount",
						"type": "uint256"
					}
				],
				"name": "fallbackCall",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "horizon",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "commitmentID",
						"type": "int64"
					}
				],
				"name": "horizonExtension",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PIN",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PUK",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2a",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2b",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2c",
						"type": "address"
					}
				],
				"name": "newClaim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "commitmentID",
						"type": "int64"
					}
				],
				"name": "newCommitment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_PIN",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "orderID",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "commitmentID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_location",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_orderDate",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint40",
						"name": "_gasForDelivery",
						"type": "uint40"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "_gasPrice",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "condition",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiverAddress",
						"type": "address"
					}
				],
				"name": "newOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PIN",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PUK",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2a",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2b",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2c",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "_gasPrice",
						"type": "uint64"
					}
				],
				"name": "newSender",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PIN",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "PUK",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2a",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2b",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "PUK2c",
						"type": "address"
					}
				],
				"name": "resetPINPUK",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "BCPGross",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_newPIN",
						"type": "address"
					}
				],
				"name": "ChangePIN",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "Collect",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					}
				],
				"name": "GetPIN",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					}
				],
				"name": "GetPUK",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "orderID",
						"type": "uint32"
					}
				],
				"name": "GetReceiverFromOrderID",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "GetSenderID",
				"outputs": [
					{
						"internalType": "int64",
						"name": "",
						"type": "int64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					}
				],
				"name": "GetSenderInformation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "_commitmentID",
						"type": "int64"
					},
					{
						"internalType": "uint40",
						"name": "_gasForMailbox",
						"type": "uint40"
					}
				],
				"name": "GetTransactionCosts",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "commitmentID",
						"type": "int64"
					},
					{
						"internalType": "uint32",
						"name": "_newHorizon",
						"type": "uint32"
					}
				],
				"name": "HorizonExtension",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"internalType": "uint32",
						"name": "_horizon",
						"type": "uint32"
					},
					{
						"internalType": "uint64",
						"name": "_senderFee",
						"type": "uint64"
					},
					{
						"internalType": "bytes32",
						"name": "_descriptionHash",
						"type": "bytes32"
					}
				],
				"name": "NewCommitment",
				"outputs": [
					{
						"internalType": "int64",
						"name": "",
						"type": "int64"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_PIN",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "_PUK",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "_gasPrice",
						"type": "uint64"
					}
				],
				"name": "NewSender",
				"outputs": [
					{
						"internalType": "int64",
						"name": "",
						"type": "int64"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_PIN",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "_PUK",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2a",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2b",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PUK2c",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "_gasPrice",
						"type": "uint64"
					}
				],
				"name": "NewSenderPro",
				"outputs": [
					{
						"internalType": "int64",
						"name": "",
						"type": "int64"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "commitmentID",
						"type": "int64"
					},
					{
						"internalType": "uint40",
						"name": "_gasForMailbox",
						"type": "uint40"
					},
					{
						"internalType": "string",
						"name": "_location",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "_orderDate",
						"type": "uint32"
					}
				],
				"name": "ORDER",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "orderID",
						"type": "uint32"
					},
					{
						"internalType": "int88",
						"name": "_data",
						"type": "int88"
					},
					{
						"internalType": "bool",
						"name": "_statusFlag",
						"type": "bool"
					}
				],
				"name": "Relay",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"internalType": "address payable",
						"name": "_newPIN",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "_newPUK",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newPUK2a",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newPUK2b",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newPUK2c",
						"type": "address"
					}
				],
				"name": "ResetPINPUK",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "commitments",
				"outputs": [
					{
						"internalType": "int64",
						"name": "SenderID",
						"type": "int64"
					},
					{
						"internalType": "uint32",
						"name": "_horizon",
						"type": "uint32"
					},
					{
						"internalType": "uint64",
						"name": "_senderFee",
						"type": "uint64"
					},
					{
						"internalType": "bytes32",
						"name": "_descriptionHash",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "keyMap",
				"outputs": [
					{
						"internalType": "int64",
						"name": "",
						"type": "int64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"PINChanged(int64,address)": {
					"details": "provides information of a changed PIN to the website",
					"params": {
						"SenderID": "uint that identifies a specific sender (is constant)",
						"newPIN": "alternative PIN for the deleted one"
					}
				},
				"dataDelivered(uint32,bool,bool)": {
					"params": {
						"_status": "shows whether the oder is open or closed",
						"_statusFlag": "is a control variable that shows if the incoming transaction contains the datapoint",
						"orderID": "uint that identifies a specific order"
					}
				},
				"fallbackCall(address,uint256)": {
					"params": {
						"CustomerAddress": "is the address that called the fallback function",
						"MonetaryAmount": "is the msg.value that was provided within the call"
					}
				},
				"horizonExtension(uint32,int64)": {
					"params": {
						"commitmentID": "int that identfies the senders most recent .xlsx file ",
						"horizon": "is the new expire date "
					}
				},
				"newClaim(int64,address,address,address,address,address)": {
					"details": "provides information of calls of the ResetPINPUK function in its first stage of the reset process",
					"params": {
						"PIN": "is the main address",
						"SenderID": "uint that identifies a specific sender (is constant)"
					}
				},
				"newCommitment(int64,int64)": {
					"params": {
						"SenderID": "uint that identifies a specific sender (is constant)",
						"commitmentID": "uint that identfies the senders most recent .xlsx file"
					}
				},
				"newOrder(address,uint32,int64,string,uint32,uint40,uint64,bool,address)": {
					"params": {
						"_PIN": "is the senders main address",
						"_gasForDelivery": "is the total amount of gas that is available for the delivery process",
						"_gasPrice": "sets the gas Price for the delivery process",
						"_location": "is the position (column and row) in the .xlsx file",
						"_orderDate": "date on which the order should arrive (in epochtime)",
						"commitmentID": "uint that identfies the senders most recent .xlsx file",
						"condition": "checks whether the order date is within the commitment horizon",
						"orderID": "uint that identifies a specific order",
						"receiverAddress": "is the address of the receiver "
					}
				},
				"newSender(int64,address,address,address,address,address,uint64)": {
					"params": {
						"PIN": "is the main address",
						"PUK": "is the address to change the PIN address",
						"PUK2a": "first of the PUK2 triplet. Is held by the sender",
						"PUK2b": "second of the PUK2 triplet. Is held by the first trusted party",
						"PUK2c": "third of the PUK2 triplet. Is held by the second trusted party",
						"SenderID": "int64 that identifies a specific sender"
					}
				},
				"resetPINPUK(int64,address,address,address,address,address)": {
					"params": {
						"PIN": "is the main address",
						"PUK": "is the address to change the PIN address",
						"PUK2a": "first of the PUK2 triplet. Is held by the sender",
						"PUK2b": "second of the PUK2 triplet. Is held by the first trusted party",
						"PUK2c": "third of the PUK2 triplet. Is held by the second trusted party",
						"SenderID": "uint that identifies a specific sender (is constant)"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"ChangePIN(address)": {
					"details": "to change the PIN addresshas to be called by the PUK",
					"params": {
						"_newPIN": "alternative PIN for the deleted one"
					}
				},
				"Collect()": {
					"details": "transfers all collected payments from this contract to the owner"
				},
				"GetPIN(int64)": {
					"details": "returns the PIN of a SenderID"
				},
				"GetPUK(int64)": {
					"details": "returns the PUK of a SenderID"
				},
				"GetReceiverFromOrderID(uint32)": {
					"details": "necessary to be able to display the receiver address on our webpage",
					"params": {
						"orderID": "uint that identifies a specific order (is constant)"
					}
				},
				"GetSenderID()": {
					"details": "determines the SenderID via the address (PIN or PUK)the possibility to easlily get your SenderID increases the sender convenienceis needed for testing purposes, you have to kblock.timestamp the SenderID"
				},
				"GetSenderInformation(int64)": {
					"details": "returns the entire sender structhas to be called by the PUKis needed for testing purposes (backend) you have to check whether PIN and/or PUK got changed",
					"params": {
						"SenderID": "uint that identifies a specific sender (is constant)"
					}
				},
				"HorizonExtension(int64,uint32)": {
					"details": "extends the senders commitment",
					"params": {
						"_newHorizon": "the date until when a sender commits himself (in epochtime)",
						"commitmentID": "uint that identfies the senders most recent .xlsx file  -> here that ID should be chosen the sender wishes to extend"
					}
				},
				"NewCommitment(int64,uint32,uint64,bytes32)": {
					"details": "sets up new commitments for .xlsx files",
					"params": {
						"SenderID": "uint that identifies a specific sender (is constant)",
						"_descriptionHash": "sets the identification parameter for the commited data",
						"_horizon": "the date until when a sender commits himself (in epochtime)",
						"_senderFee": "sets the fee that is required to be paid within the order process"
					}
				},
				"NewSender(address,address,uint64)": {
					"details": "function registers new senders within a lower security level using the PUK address as PUK und PUK2 triplet",
					"params": {
						"_PIN": "is the SCAs main address",
						"_PUK": "is the senders main address",
						"_gasPrice": "sets the gas Price for the delivery process of that .xlsx file"
					}
				},
				"NewSenderPro(address,address,address,address,address,uint64)": {
					"details": "function register allows to set PIN, PUK and PUK2 triplet, thereby creating the SenderIDthis function has to be called via the PUK address",
					"params": {
						"_PIN": "is the SCAs main address",
						"_PUK": "is the senders main address",
						"_PUK2a": "first of the PUK2 triplet. Is held by the sender",
						"_PUK2b": "second of the PUK2 triplet. Is held by the first trusted party",
						"_PUK2c": "third of the PUK2 triplet. Is held by the second trusted party",
						"_gasPrice": "sets the gas Price for the delivery process of that .xlsx file"
					}
				},
				"ORDER(int64,uint40,string,uint32)": {
					"details": "general order function for customized orders",
					"params": {
						"_gasForMailbox": "is the maximum of gas that is available for the delivery process (set by the receiver)",
						"_location": "is the position (column and row) in the .xlsx file",
						"_orderDate": "date on which the order should arrive (in epochtime)",
						"commitmentID": "uint that identifies a specific commitment"
					}
				},
				"Relay(uint32,int88,bool)": {
					"details": "receives the final data and collects the fee",
					"params": {
						"_data": "is the finally requested information behind the order",
						"_statusFlag": "is a control variable that shows if the incoming transaction contains the datapoint",
						"orderID": "uint that identifies a specific order (is constant)"
					}
				},
				"constructor": {
					"details": "registers BCP as SenderID-0registers SenderID-1 through SenderID-3keeps commitment 0 emptycommits commitments 1-21"
				}
			},
			"stateVariables": {
				"commitments": {
					"details": "stores all Commitments"
				},
				"keyMap": {
					"details": "maps the PIN and PUK to a SenderID NOTE: ensures that  (i) Different SenderIDs have different PINs (ii) PINs are not used as PUKs"
				},
				"orders": {
					"details": "stores all Orders"
				},
				"resetIndex": {
					"details": "maps SenderID to ResetPUK NOTE: recalls existing claims of the ResetPINPUK function"
				},
				"senders": {
					"details": "stores all Senders"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"GetTransactionCosts(int64,uint40)": {
					"notice": "The order & delivery module consists of nine order functions and the Relay function: The order functions differ in the number of function arguments: - GetTransactionCosts: Determines the transaction costs - GeneralOrder: Is the only order function that contains the hole function body - Relay: Receives the incoming data and transfers it to the final receiver and substracts the fee from the original payment of the receiver."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Main.sol": "BlockchainPresence"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Main.sol": {
			"keccak256": "0x767d7955cc2ae7c797a069123340745525dc212415a9a72dcf61ba68478418a9",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://89697b13bf8ae00686a895fb4193ec048803ef4f60da78231428ad45b2482ecb",
				"dweb:/ipfs/QmaDUge9aXrhZDq31B1xSDZ9rgQbcew5hmnwzgNeJZw6xH"
			]
		}
	},
	"version": 1
}